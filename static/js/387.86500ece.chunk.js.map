{"version":3,"file":"static/js/387.86500ece.chunk.js","mappings":"0PAEaA,EAAOC,EAAAA,GAAAA,GAAH,mGAGJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,MAChB,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,MAGtBC,EAAWJ,EAAAA,GAAAA,GAAH,6CAIRK,EAAQL,EAAAA,GAAAA,IAAH,+CACC,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,MAGzBG,EAAON,EAAAA,GAAAA,EAAH,oEACE,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,MACrB,SAAAF,GAAC,OAAIA,EAAEC,MAAMK,YAAYC,Q,mBC8B1C,EA3Ca,WACX,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQH,GAASI,KAAKL,GAASM,MAAMC,QAAQC,OAC5C,CAACP,KAGF,gCACGF,IACC,SAACX,EAAD,UACGW,EACEU,MAAM,EAAG,IACTC,KACC,gBACiBC,EADjB,EACEC,cACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,GACcC,EAJhB,EAIEC,aAJF,OAME,UAACvB,EAAD,YACE,SAACC,EAAD,CACEuB,IACEF,EAAM,yCACgCA,GAClCG,EAENC,IAAI,QACJC,MAAM,SAER,SAACzB,EAAD,UAAOgB,KACP,uBAAIE,MAXSC,QAiBP,KAAb,OAAJf,QAAI,IAAJA,OAAA,EAAAA,EAAMsB,UAAgB,+C,0MC3CvBC,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,6BAElB,IAAMC,EAAW,mCAAG,oGACHD,IAAAA,IAAA,sCAAyCD,IADtC,cACnBG,EADmB,yBAElBA,EAAQC,KAAKD,SAFK,2CAAH,qDAKXE,EAAY,mCAAG,WAAMb,GAAN,uFACNS,IAAAA,IAAA,mBACNT,EADM,oBACQQ,EADR,oBADM,cACpBM,EADoB,yBAInBA,EAAMF,MAJa,2CAAH,sDAOZtB,EAAO,mCAAG,WAAMU,GAAN,uFACFS,IAAAA,IAAA,mBACLT,EADK,4BACiBQ,EADjB,oBADE,cACfvB,EADe,yBAKdA,EAAK2B,KAAK3B,MALI,2CAAH,sDAQP8B,EAAU,mCAAG,WAAMf,GAAN,uFACFS,IAAAA,IAAA,mBACRT,EADQ,4BACcQ,EADd,oBADE,cAClBQ,EADkB,yBAKjBA,EAAQJ,KAAKD,SALI,2CAAH,sDAQVM,EAAe,mCAAG,WAAMpB,GAAN,uFACRY,IAAAA,IAAA,kCACQD,EADR,kBACyBX,EADzB,oBADQ,cACvBqB,EADuB,yBAItBA,EAAON,KAAKD,SAJU,2CAAH,uD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  row-gap: ${p => p.theme.space[5]};\n  column-gap: ${p => p.theme.space[5]};\n`;\n\nexport const ListItem = styled.li`\n  max-width: 177px;\n`;\n\nexport const Image = styled.img`\n  margin-bottom: ${p => p.theme.space[3]};\n`;\n\nexport const Name = styled.p`\n  margin-bottom: ${p => p.theme.space[2]};\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\n","import { getCast } from 'services/api';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { List, ListItem, Image, Name } from './Cast.styled';\nimport imageDefault from '../../defaultImages/no_image.png';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCast(movieId).then(setCast).catch(console.log);\n  }, [movieId]);\n\n  return (\n    <>\n      {cast && (\n        <List>\n          {cast\n            .slice(0, 21)\n            .map(\n              ({\n                original_name: name,\n                character,\n                id,\n                profile_path: avatar,\n              }) => (\n                <ListItem key={id}>\n                  <Image\n                    src={\n                      avatar\n                        ? `https://image.tmdb.org/t/p/w500${avatar}`\n                        : imageDefault\n                    }\n                    alt=\"actor\"\n                    width=\"177\"\n                  />\n                  <Name>{name}</Name>\n                  <p>{character}</p>\n                </ListItem>\n              )\n            )}\n        </List>\n      )}\n      {cast?.length === 0 && <p>No information</p>}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nconst API_KEY = 'eb27e8cbb5d4491c458165c6bd3dc0ba';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nexport const getTrending = async () => {\n  const results = await axios.get(`/3/trending/all/day?api_key=${API_KEY}`);\n  return results.data.results;\n};\n\nexport const getMovieById = async id => {\n  const movie = await axios.get(\n    `/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return movie.data;\n};\n\nexport const getCast = async id => {\n  const cast = await axios.get(\n    `/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return cast.data.cast;\n};\n\nexport const getReviews = async id => {\n  const reviews = await axios.get(\n    `/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return reviews.data.results;\n};\n\nexport const getMoviesByName = async name => {\n  const movies = await axios.get(\n    `/3/search/movie?api_key=${API_KEY}&query=${name}&language=en-US`\n  );\n  return movies.data.results;\n};\n"],"names":["List","styled","p","theme","space","ListItem","Image","Name","fontWeights","bold","useState","cast","setCast","movieId","useParams","useEffect","getCast","then","catch","console","log","slice","map","name","original_name","character","id","avatar","profile_path","src","imageDefault","alt","width","length","API_KEY","axios","getTrending","results","data","getMovieById","movie","getReviews","reviews","getMoviesByName","movies"],"sourceRoot":""}