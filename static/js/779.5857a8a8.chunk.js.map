{"version":3,"file":"static/js/779.5857a8a8.chunk.js","mappings":"sPAEaA,EAAWC,EAAAA,GAAAA,GAAH,8EAEA,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,MAI3BC,EAASJ,EAAAA,GAAAA,EAAH,oEACA,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,MACrB,SAAAF,GAAC,OAAIA,EAAEC,MAAMG,YAAYC,Q,SCyB1C,EA9BgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,IAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWH,GAASI,KAAKL,GAAYM,MAAMC,QAAQC,OAClD,CAACP,IAECF,EAIL,OACE,8BACGA,EAAQU,QACP,wBACGV,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAACvB,EAAD,YACE,SAACK,EAAD,UAASiB,KACT,uBAAIC,MAFSF,SAOnB,uE,0MC5BFG,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,6BAElB,IAAMC,EAAW,mCAAG,oGACHD,IAAAA,IAAA,sCAAyCD,IADtC,cACnBG,EADmB,yBAElBA,EAAQC,KAAKD,SAFK,2CAAH,qDAKXE,EAAY,mCAAG,WAAMR,GAAN,uFACNI,IAAAA,IAAA,mBACNJ,EADM,oBACQG,EADR,oBADM,cACpBM,EADoB,yBAInBA,EAAMF,MAJa,2CAAH,sDAOZG,EAAO,mCAAG,WAAMV,GAAN,uFACFI,IAAAA,IAAA,mBACLJ,EADK,4BACiBG,EADjB,oBADE,cACfQ,EADe,yBAKdA,EAAKJ,KAAKI,MALI,2CAAH,sDAQPlB,EAAU,mCAAG,WAAMO,GAAN,uFACFI,IAAAA,IAAA,mBACRJ,EADQ,4BACcG,EADd,oBADE,cAClBf,EADkB,yBAKjBA,EAAQmB,KAAKD,SALI,2CAAH,sDAQVM,EAAe,mCAAG,WAAMC,GAAN,uFACRT,IAAAA,IAAA,kCACQD,EADR,kBACyBU,EADzB,oBADQ,cACvBC,EADuB,yBAItBA,EAAOP,KAAKD,SAJU,2CAAH","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: ${p => p.theme.space[5]};\n  }\n`;\n\nexport const Author = styled.p`\n  margin-bottom: ${p => p.theme.space[3]};\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\n","import { getReviews } from 'services/api';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { ListItem, Author } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getReviews(movieId).then(setReviews).catch(console.log);\n  }, [movieId]);\n\n  if (!reviews) {\n    return;\n  }\n\n  return (\n    <>\n      {reviews.length ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <ListItem key={id}>\n              <Author>{author}</Author>\n              <p>{content}</p>\n            </ListItem>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any review for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nconst API_KEY = 'eb27e8cbb5d4491c458165c6bd3dc0ba';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nexport const getTrending = async () => {\n  const results = await axios.get(`/3/trending/all/day?api_key=${API_KEY}`);\n  return results.data.results;\n};\n\nexport const getMovieById = async id => {\n  const movie = await axios.get(\n    `/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return movie.data;\n};\n\nexport const getCast = async id => {\n  const cast = await axios.get(\n    `/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return cast.data.cast;\n};\n\nexport const getReviews = async id => {\n  const reviews = await axios.get(\n    `/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return reviews.data.results;\n};\n\nexport const getMoviesByName = async name => {\n  const movies = await axios.get(\n    `/3/search/movie?api_key=${API_KEY}&query=${name}&language=en-US`\n  );\n  return movies.data.results;\n};\n"],"names":["ListItem","styled","p","theme","space","Author","fontWeights","bold","useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","then","catch","console","log","length","map","id","author","content","API_KEY","axios","getTrending","results","data","getMovieById","movie","getCast","cast","getMoviesByName","name","movies"],"sourceRoot":""}